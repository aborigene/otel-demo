version: '2'

services:
  mongo:
    # container_name: mongo
    image: mongo:5.0.4
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=backend
    ports:
      - '27017:27017'
    volumes:
      - ./mongodb/init:/docker-entrypoint-initdb.d
      - ./mongodb/data:/data/db

  redis:
    # container_name: redis
    image: redis:5.0.13
    ports:
      - '6379:6379'
    volumes:
      - ./redis/data:/data

  template-service:
    # container_name: template-service
    image: martinnirtl/demos.opentelemetry.template-service:latest
    build: services/template-service
    entrypoint: ['node', 'src/start.js']
    environment:
      - PORT=4200
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=2
    ports:
      - '4200:4200'

  mail-service:
    # container_name: mail-service
    image: martinnirtl/demos.opentelemetry.mail-service:latest
    build: services/mail-service
    entrypoint: ['node', 'src/start.js']
    environment:
      - PORT=4100
      - redis=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - TEMPLATE_SERVICE_BASE_URL=http://template-service:4200
      - OTEL_EXPORT_ENABLE=true
      - OTEL_ENDPOINT_URL=grpc://otel-collector:4317 # The CollectorTraceExporter in Node expects the URL to only be the hostname. It will not work with /v1/traces.
      # - OTEL_AUTH_HEADER=
    ports:
      - '4100:4100'

  verification-service:
    # container_name: verification-service
    image: martinnirtl/demos.opentelemetry.verification-service:latest
    build: services/verification-service
    environment:
      - PORT=4010
    ports:
      - '4010:4010'

  backend:
    # container_name: backend
    image: martinnirtl/demos.opentelemetry.backend:latest
    build: services/backend
    environment:
      - PORT=3000
      - DB_CONNECTION_URL=mongodb://backend:swordfish@mongo:27017/backend
      - MAIL_SERVICE_BASE_URL=http://mail-service:4100
      - VERIFICATION_SERVICE_URL=verification-service:4010
    ports:
      - '3000:3000'

  loadgen:
    # container_name: loadgen
    image: martinnirtl/demos.opentelemetry.loadgen:latest
    build: services/loadgen
    environment:
      - BACKEND_BASE_URL=http://backend:3000

  otel-collector:
    # container_name: otel-collector
    image: otel/opentelemetry-collector:latest
    command: ['--config=/etc/otel-collector-config.yaml']
    environment:
      - OTEL_ENDPOINT_URL
      - OTEL_AUTH_HEADER
    ports:
      # - "1888:1888"   # pprof extension
      - '8888:8888' # Prometheus metrics exposed by the collector
      # - "8889:8889"   # Prometheus exporter metrics
      # - "13133:13133" # health_check extension
      - '4317:4317' # OTLP gRPC receiver
      - '4318:4318' # OTLP HTTP receiver
      # - "55670:55679" # zpages extension
    volumes:
      - ./otel/config.yaml:/etc/otel-collector-config.yaml

  oneagent:
    # container_name: oneagent
    image: dynatrace/oneagent
    command: ['--set-host-name="OpenTelemetry Demo Host 1"', '--set-host--group="opentelemetry-demo"']
    restart: unless-stopped
    privileged: true
    pid: host
    network_mode: host
    environment:
      - ONEAGENT_INSTALLER_SCRIPT_URL
      - ONEAGENT_INSTALLER_DOWNLOAD_TOKEN
    volumes:
      - /:/mnt/root
