version: '2'

services:
  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=backend
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb/init:/docker-entrypoint-initdb.d
      - ./mongodb/data:/data/db

  redis:
    container_name: redis
    image: redis:5.0.13
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data

  loadgen:
    container_name: loadgen
    image: loadgen:local
    build: loadgen
    environment:
      - BACKEND_BASE_URL=http://${BACKEND_HOST}:3000

  backend:
    container_name: backend
    image: backend:local
    build: backend
    environment:
      - PORT=3000
      - DB_CONNECTION_URL=mongodb://backend:swordfish@${MONGODB_HOST}:27017/backend
      - MAIL_SERVICE_BASE_URL=http://${MAILSERVICE_HOST}:4100
      - VERIFICATION_SERVICE_URL=${VERIFICATIONSERVICE_HOST}:4010
    ports:
      - "3000:3000"

  verification-service:
    container_name: verification-service
    image: verification-service:local
    build: verification-service
    environment:
      - PORT=4010
    ports:
      - "4010:4010"

  mail-service:
    container_name: mail-service
    image: mail-service:local
    build: mail-service
    entrypoint: ["node", "src/start.js"]
    environment:
      - PORT=4100
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=6379
      - REDIS_DB=1
      - TEMPLATE_SERVICE_BASE_URL=http://${TEMPLATESERVICE_HOST}:4200
      - OTEL_EXPORT_ENABLE
      - OTEL_BACKEND_URL
      - OTEL_AUTH_HEADER
    ports:
      - "4100:4100"

  template-service:
    container_name: template-service
    image: template-service:local
    build: template-service
    environment:
      - PORT=4200
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=6379
      - REDIS_DB=2
    ports:
      - "4200:4200"
